name: Publish Python 🐍 distribution 📦 to PyPI

on:
  release:
    types: [created]

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Needed for auto-commit action
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main  # Explicitly checkout main branch
        fetch-depth: 0  # Fetch all history for proper version tracking
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    
    - name: Update version in pyproject.toml
      run: |
        # Extract version from tag (e.g., from refs/tags/v1.1.0 or refs/tags/1.1.0)
        VERSION=$(echo $GITHUB_REF | sed -e 's,.*/\(.*\),\1,' -e 's/^v//')
        echo "Setting version to: $VERSION"
        poetry version $VERSION
        
    - name: Commit version update
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Bump version to ${{ github.ref_name }}"
        file_pattern: 'pyproject.toml'
        branch: main  # Explicitly specify the branch
        create_branch: false
        
    - name: Build a binary wheel and a source tarball
      run: poetry build
      
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    
    environment:
      name: pypi
      url: https://pypi.org/p/github-pr-watcher
    
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign with Sigstore and upload to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'